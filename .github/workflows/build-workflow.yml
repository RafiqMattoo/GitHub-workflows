# name: Github Workflow
# on: workflow_dispatch
# jobs:
#   first-job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Greeting Message
#         run: echo "Welcome to github"
#       - name: Seeof Message
#         run: echo "Bye from github"
        
name: Github Workflow Demo
on: [push, workflow_dispatch]
jobs:
  Lint :
    runs-on: ubuntu-latest
    steps:
      - name: Run Linting
        uses: actions/checkout@v4
      - name: Install Node JS Version
        uses : actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  Test :
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Run Linting
        uses: actions/checkout@v4
      - name: Install Node JS Version
        uses : actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  Deploy :
    needs: [Test, Lint ]
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file}}
    steps:
      - name: Get the Code from Github Repo
        uses: actions/checkout@v4
      - name: Install Node JS Version
        uses : actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci
      - name: Build Code
        run: npm run build
      - name: Publish File Name
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Github Context Data  
        run: echo "${{ toJSON(github) }}"      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: output-build
          path: |
                dist
                package.json
                README.md
  Deployment :
    needs: [Test, Lint, Deploy ]
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: output-build
          run: ls
      - name: Filename
        run: echo ${{ needs.Deploy.outputs.script-file }}












    


      
      
  
          